<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="brnSelectCli.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="brnSelectCli.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="col_ver.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="col_ver.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="col_ver.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2ocCGf8DEKAD8xr6tp8AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="col_rollos.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="col_rollos.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>